// <auto-generated />
using System;
using Battleship_State_Tracker.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Battleship_State_Tracker.Migrations
{
    [DbContext(typeof(BattleshipContext))]
    [Migration("20220328203755_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Battleship_State_Tracker.Models.Board", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId")
                        .IsUnique();

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("Battleship_State_Tracker.Models.Boat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BoardId")
                        .HasColumnType("int");

                    b.Property<int?>("HeadPosId")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int?>("TailPosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.HasIndex("HeadPosId");

                    b.HasIndex("TailPosId");

                    b.ToTable("Boats");
                });

            modelBuilder.Entity("Battleship_State_Tracker.Models.BoatStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BoatStatus");
                });

            modelBuilder.Entity("Battleship_State_Tracker.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Battleship_State_Tracker.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Letter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Battleship_State_Tracker.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("RoomStatusId")
                        .HasColumnType("int");

                    b.Property<int>("TurnNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomStatusId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Battleship_State_Tracker.Models.RoomStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomStatus");
                });

            modelBuilder.Entity("Battleship_State_Tracker.Models.Shoot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ShootPositionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShootPositionId");

                    b.ToTable("Shoots");
                });

            modelBuilder.Entity("Battleship_State_Tracker.Models.Turn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BoardId")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int?>("ShootId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("ShootId");

                    b.ToTable("Turns");
                });

            modelBuilder.Entity("Battleship_State_Tracker.Models.Board", b =>
                {
                    b.HasOne("Battleship_State_Tracker.Models.Room", null)
                        .WithOne("Board")
                        .HasForeignKey("Battleship_State_Tracker.Models.Board", "RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Battleship_State_Tracker.Models.Boat", b =>
                {
                    b.HasOne("Battleship_State_Tracker.Models.Board", null)
                        .WithMany("BoatList")
                        .HasForeignKey("BoardId");

                    b.HasOne("Battleship_State_Tracker.Models.Position", "HeadPos")
                        .WithMany()
                        .HasForeignKey("HeadPosId");

                    b.HasOne("Battleship_State_Tracker.Models.Position", "TailPos")
                        .WithMany()
                        .HasForeignKey("TailPosId");

                    b.Navigation("HeadPos");

                    b.Navigation("TailPos");
                });

            modelBuilder.Entity("Battleship_State_Tracker.Models.Player", b =>
                {
                    b.HasOne("Battleship_State_Tracker.Models.Room", null)
                        .WithMany("PlayerList")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("Battleship_State_Tracker.Models.Room", b =>
                {
                    b.HasOne("Battleship_State_Tracker.Models.RoomStatus", "RoomStatus")
                        .WithMany()
                        .HasForeignKey("RoomStatusId");

                    b.Navigation("RoomStatus");
                });

            modelBuilder.Entity("Battleship_State_Tracker.Models.Shoot", b =>
                {
                    b.HasOne("Battleship_State_Tracker.Models.Position", "ShootPosition")
                        .WithMany()
                        .HasForeignKey("ShootPositionId");

                    b.Navigation("ShootPosition");
                });

            modelBuilder.Entity("Battleship_State_Tracker.Models.Turn", b =>
                {
                    b.HasOne("Battleship_State_Tracker.Models.Board", null)
                        .WithMany("TurnList")
                        .HasForeignKey("BoardId");

                    b.HasOne("Battleship_State_Tracker.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId");

                    b.HasOne("Battleship_State_Tracker.Models.Shoot", "Shoot")
                        .WithMany()
                        .HasForeignKey("ShootId");

                    b.Navigation("Player");

                    b.Navigation("Shoot");
                });

            modelBuilder.Entity("Battleship_State_Tracker.Models.Board", b =>
                {
                    b.Navigation("BoatList");

                    b.Navigation("TurnList");
                });

            modelBuilder.Entity("Battleship_State_Tracker.Models.Room", b =>
                {
                    b.Navigation("Board");

                    b.Navigation("PlayerList");
                });
#pragma warning restore 612, 618
        }
    }
}
